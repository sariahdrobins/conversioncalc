// Function to switch between conversion types
function changeConversionType() {
    const conversionType = document.getElementById('conversion-type').value;
    const conversionContents = document.querySelectorAll('.conversion-content');
    conversionContents.forEach(content => content.classList.remove('active'));
    document.getElementById(`${conversionType}-conversion`).classList.add('active');
}

// Length Conversion
function convertLength() {
    const value = parseFloat(document.getElementById('length-value').value);
    const fromUnit = document.getElementById('length-from').value;
    const toUnit = document.getElementById('length-to').value;

    const conversionRates = {
        millimeters: 1,
        centimeters: 10,
        meters: 1000,
        kilometers: 1000000,
        inches: 25.4,
        feet: 304.8,
        yards: 914.4,
        miles: 1609344
    };

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    const result = (value * conversionRates[fromUnit]) / conversionRates[toUnit];
    document.getElementById('length-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}

// Weight Conversion
function convertWeight() {
    const value = parseFloat(document.getElementById('weight-value').value);
    const fromUnit = document.getElementById('weight-from').value;
    const toUnit = document.getElementById('weight-to').value;

    const conversionRates = {
        milligrams: 1,
        grams: 1000,
        kilograms: 1000000,
        ounces: 28349.5,
        pounds: 453592,
        stones: 6350293,
        metric_tons: 1000000000,
    };

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    const result = (value * conversionRates[fromUnit]) / conversionRates[toUnit];
    document.getElementById('weight-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}

// Temperature Conversion
function convertTemperature() {
    const value = parseFloat(document.getElementById('temperature-value').value);
    const fromUnit = document.getElementById('temperature-from').value;
    const toUnit = document.getElementById('temperature-to').value;

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    let result;

    if (fromUnit === 'C') {
        if (toUnit === 'F') {
            result = (value * 9/5) + 32;
        } else if (toUnit === 'K') {
            result = value + 273.15;
        } else {
            result = value;
        }
    } else if (fromUnit === 'F') {
        if (toUnit === 'C') {
            result = (value - 32) * 5/9;
        } else if (toUnit === 'K') {
            result = (value - 32) * 5/9 + 273.15;
        } else {
            result = value;
        }
    } else if (fromUnit === 'K') {
        if (toUnit === 'C') {
            result = value - 273.15;
        } else if (toUnit === 'F') {
            result = (value - 273.15) * 9/5 + 32;
        } else {
            result = value;
        }
    }

    document.getElementById('temperature-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}

// Volume Conversion
function convertVolume() {
    const value = parseFloat(document.getElementById('volume-value').value);
    const fromUnit = document.getElementById('volume-from').value;
    const toUnit = document.getElementById('volume-to').value;

    const conversionRates = {
        milliliters: 1,
        centiliters: 10,
        deciliters: 100,
        liters: 1000,
        gallons: 3785.41,
        quarts: 946.353,
        pints: 473.176,
        cups: 240,
    };

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    const result = (value * conversionRates[fromUnit]) / conversionRates[toUnit];
    document.getElementById('volume-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}

// Area Conversion
function convertArea() {
    const value = parseFloat(document.getElementById('area-value').value);
    const fromUnit = document.getElementById('area-from').value;
    const toUnit = document.getElementById('area-to').value;

    const conversionRates = {
        square_mm: 1,
        square_cm: 100,
        square_m: 1000000,
        square_km: 1000000000000,
        square_inch: 645.16,
        square_ft: 92903.04,
        square_yard: 836127.36,
        square_mile: 25899881103.04,
    };

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    const result = (value * conversionRates[fromUnit]) / conversionRates[toUnit];
    document.getElementById('area-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}

// Speed Conversion
function convertSpeed() {
    const value = parseFloat(document.getElementById('speed-value').value);
    const fromUnit = document.getElementById('speed-from').value;
    const toUnit = document.getElementById('speed-to').value;

    const conversionRates = {
        meters_per_second: 1,
        kilometers_per_hour: 3.6,
        miles_per_hour: 2.23694,
        feet_per_second: 3.28084,
        knots: 1.94384,
    };

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    const result = (value * conversionRates[fromUnit]) / conversionRates[toUnit];
    document.getElementById('speed-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}

// Time Conversion
function convertTime() {
    const value = parseFloat(document.getElementById('time-value').value);
    const fromUnit = document.getElementById('time-from').value;
    const toUnit = document.getElementById('time-to').value;

    const conversionRates = {
        seconds: 1,
        minutes: 60,
        hours: 3600,
        days: 86400,
        weeks: 604800,
        months: 2629746,
        years: 31556952,
    };

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    const result = (value * conversionRates[fromUnit]) / conversionRates[toUnit];
    document.getElementById('time-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}

// Power Conversion
function convertPower() {
    const value = parseFloat(document.getElementById('power-value').value);
    const fromUnit = document.getElementById('power-from').value;
    const toUnit = document.getElementById('power-to').value;

    const conversionRates = {
        watts: 1,
        kilowatts: 1000,
        horsepower: 745.7,
        joules_per_second: 1,
    };

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    const result = (value * conversionRates[fromUnit]) / conversionRates[toUnit];
    document.getElementById('power-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}

// Energy Conversion
function convertEnergy() {
    const value = parseFloat(document.getElementById('energy-value').value);
    const fromUnit = document.getElementById('energy-from').value;
    const toUnit = document.getElementById('energy-to').value;

    const conversionRates = {
        joules: 1,
        kilojoules: 1000,
        calories: 4.184,
        kilocalories: 4184,
        watt_hours: 3600,
        kilowatt_hours: 3600000,
    };

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    const result = (value * conversionRates[fromUnit]) / conversionRates[toUnit];
    document.getElementById('energy-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}

// Data Storage Conversion
function convertData() {
    const value = parseFloat(document.getElementById('data-value').value);
    const fromUnit = document.getElementById('data-from').value;
    const toUnit = document.getElementById('data-to').value;

    const conversionRates = {
        bytes: 1,
        kilobytes: 1024,
        megabytes: 1048576,
        gigabytes: 1073741824,
        terabytes: 1099511627776,
    };

    if (!value || isNaN(value)) {
        alert("Please enter a valid number.");
        return;
    }

    const result = (value * conversionRates[fromUnit]) / conversionRates[toUnit];
    document.getElementById('data-result').innerHTML = `${value} ${fromUnit} = ${result.toFixed(4)} ${toUnit}`;
}
